# Makefile for building all files inside subdirectories

# Set the compiler and compiler flags
CC := g++
CFLAGS := -Wall -Wextra -std=c++11

# Find all subdirectories in the current directory
SUBDIRECTORIES := $(wildcard */)

# Get the names of all .c files in subdirectories
C_FILES := $(wildcard $(addsuffix *.c, $(SUBDIRECTORIES)))

# Generate the names of corresponding .o files
OBJ_FILES := $(patsubst %.c, %.o, $(C_FILES))

# Set the name of the final executable
EXECUTABLE := my_program

# Default target: build the executable
all: $(EXECUTABLE)

# Rule for building the executable
$(EXECUTABLE): $(OBJ_FILES)
	$(CC) $(CFLAGS) $^ -o $@

# Rule for building .o files from .c files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean target: remove all generated files
clean:
	rm -f $(OBJ_FILES) $(EXECUTABLE)

.PHONY: all clean
